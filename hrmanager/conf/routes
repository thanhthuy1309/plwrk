# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
POST    /postLogin								controllers.LoginController.postLogin()
GET     /                           			controllers.LoginController.home()
GET     /logout                     			controllers.LogoutController.logout()
GET     /index                      			controllers.LoginController.index()
GET     /loginHome                  			controllers.LoginController.loginHome()
GET     /loginByGoogle              			controllers.LoginController.loginByGoogle()
GET     /login      							controllers.LoginController.login(state: String, code: String)
GET     /send									controllers.ApplicationScala.send()
GET		/admin/list								controllers.AdminController.listUser()
GET		/admin/update/:email					controllers.AdminController.updateUser(email: String)
POST	/admin/update/:email/:mode				controllers.AdminController.adminUpdateUserPost(email: String,mode: String)
GET		/profile								controllers.AdminController.profile()
GET		/register								controllers.RegisterController.register()
POST	/register								controllers.RegisterController.registerUserPost()
GET		/error_first							controllers.ErrorController.error_first()

GET		/employee/apply/:id/:currentPage		controllers.EmployeeController.emloyeeApplyGet(id: Int, currentPage: Int)
POST	/employee/apply/						controllers.EmployeeController.emloyeeApplyPost()
GET		/admin/application/list/:status			controllers.AdminJobApplicationController.listJobApplication(status: Int)
GET		/admin/application/info/:id/:status		controllers.AdminJobApplicationController.loadJobApplicationInfo(id: Int,status: Int)

GET		/employee/notApproved					controllers.EmployeeController.notApproved()
GET		/employee/deleteApply/:id/:currentPage	controllers.EmployeeController.deleteApply(id: Int, currentPage: Int)
GET		/employee/myLeaveOfAbsence				controllers.EmployeeController.myLeaveOfAbsence()
GET		/employee/approved						controllers.EmployeeController.approved()
GET		/employee/denied						controllers.EmployeeController.denied()
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file             				controllers.Assets.at(path="/public", file)
